/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rockpaperscissorslizardspock;

/**
 *
 * @author MarcLeo
 */
import static java.lang.Integer.parseInt;
import java.util.Random;
import javax.swing.JOptionPane;
import static java.lang.Integer.parseInt;

public class RockPaperScissorsLizardSpock extends javax.swing.JFrame {

    /**
     * Creates new form Game
     */
    public RockPaperScissorsLizardSpock() {
        initComponents();
    }
    
    private String choice;
    private Random rand = new Random();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        Choice = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rock = new javax.swing.JRadioButton();
        paper = new javax.swing.JRadioButton();
        scissors = new javax.swing.JRadioButton();
        lizard = new javax.swing.JRadioButton();
        spock = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        playerScore = new javax.swing.JTextField();
        computerScore = new javax.swing.JTextField();
        playBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RockPaperScissorsLizardSpock!!!");
        setResizable(false);

        jLabel1.setText("Your choice:");

        buttonGroup1.add(rock);
        rock.setText("Rock");
        rock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockActionPerformed(evt);
            }
        });

        buttonGroup1.add(paper);
        paper.setText("Paper");

        buttonGroup1.add(scissors);
        scissors.setText("Scissors");

        buttonGroup1.add(lizard);
        lizard.setText("Lizard");

        buttonGroup1.add(spock);
        spock.setText("Spock");

        javax.swing.GroupLayout ChoiceLayout = new javax.swing.GroupLayout(Choice);
        Choice.setLayout(ChoiceLayout);
        ChoiceLayout.setHorizontalGroup(
            ChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChoiceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spock)
                    .addComponent(lizard)
                    .addComponent(scissors)
                    .addComponent(paper)
                    .addComponent(jLabel1)
                    .addComponent(rock))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        ChoiceLayout.setVerticalGroup(
            ChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChoiceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scissors)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lizard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spock)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        result.setColumns(20);
        result.setRows(5);
        result.setText("Result: ");
        jScrollPane1.setViewportView(result);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jLabel3.setText("Player's Score");

        jLabel4.setText("Computer's Score");

        playerScore.setText("0");
        playerScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerScoreActionPerformed(evt);
            }
        });

        computerScore.setText("0");

        playBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        playBtn.setText("RockPaperScissorsLizardSpock!");
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(computerScore))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(35, 35, 35)
                        .addComponent(playerScore)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(playerScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(computerScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Choice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int randInt(int min, int max) {
        int randomNum = rand.nextInt((max - min) + 1) + min;
        return randomNum;
    } 
    
    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        // TODO add your handling code here:
        int computerChoice = randInt(1, 5);
        
        if(rock.isSelected() == true) printer(1, computerChoice);
        else if(paper.isSelected() == true) printer(2, computerChoice);
        else if(scissors.isSelected() == true) printer(3, computerChoice);
        else if(lizard.isSelected() == true) printer(4, computerChoice);
        else if(spock.isSelected() == true) printer(5, computerChoice);
    }//GEN-LAST:event_playBtnActionPerformed

    private void isGameOver() {
        int player = parseInt(playerScore.getText());
        int computer = parseInt(computerScore.getText());
        if(player == 5) {
            int newgame = JOptionPane.showConfirmDialog(null, "Player won!\nNew game?", "GAME OVER", JOptionPane.YES_NO_OPTION);
            if(newgame == 1) {
                System.exit(0);
            }
            else {
                result.setText("Result:");
                buttonGroup1.clearSelection();
                playerScore.setText("" + 0);
                computerScore.setText("" + 0); 
            }
        }
        else if(computer == 5) {
            int newgame = JOptionPane.showConfirmDialog(null, "Computer won!\nNew game?", "GAME OVER", JOptionPane.YES_NO_OPTION);
            if(newgame == 1) {
                System.exit(0);
            }
            else {
                result.setText("Result:");
                buttonGroup1.clearSelection();
                playerScore.setText("" + 0);
                computerScore.setText("" + 0);
            }
        }
        else {
            playerScore.setText("" + player);
            computerScore.setText("" + computer); 
        }
    }
    
    private void printer(int plyrChoice, int comChoice) {
        int player = parseInt(playerScore.getText());
        int computer = parseInt(computerScore.getText());
        if(plyrChoice == 1) {
            if(comChoice == 1) {
                result.setText("Result:\nPlayer used ROCK\nComputer used ROCK\n\nITS A TIE!");
                playerScore.setText("" + player);
                computerScore.setText("" + computer);
            }
            else if(comChoice == 2) {
                result.setText("Result:\nPlayer used ROCK\nComputer used PAPER\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1));
            }
            else if(comChoice == 3) {
                result.setText("Result:\nPlayer used ROCK\nComputer used SCISSORS\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer);
            }
            else if(comChoice == 4) {
                result.setText("Result:\nPlayer used ROCK\nComputer used LIZARD\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer);                
            }
            else if(comChoice == 5) {
                result.setText("Result:\nPlayer used ROCK\nComputer used SPOCK\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
        }
        else if(plyrChoice == 2) {
            if(comChoice == 1) {
                result.setText("Result:\nPlayer used PAPER\nComputer used ROCK\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 2) {
                result.setText("Result:\nPlayer used PAPER\nComputer used PAPER\n\nITS A TIE!");
                playerScore.setText("" + player);
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 3) {
                result.setText("Result:\nPlayer used PAPER\nComputer used SCISSORS\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 4) {
                result.setText("Result:\nPlayer used PAPER\nComputer used LIZARD\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 5) {
                result.setText("Result:\nPlayer used PAPER\nComputer used SPOCK\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
        }
        else if(plyrChoice == 3) {
            if(comChoice == 1) {
                result.setText("Result:\nPlayer used SCISSORS\nComputer used ROCK\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 2) {
                result.setText("Result:\nPlayer used SCISSORS\nComputer used PAPER\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 3) {
                result.setText("Result:\nPlayer used SCISSORS\nComputer used SCISSORS\n\nITS A TIE!");
                playerScore.setText("" + player);
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 4) {
                result.setText("Result:\nPlayer used SCISSORS\nComputer used LIZARD\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 5) {
                result.setText("Result:\nPlayer used SCISSORS\nComputer used SPOCK\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }            
        }
        else if(plyrChoice == 4) {
            if(comChoice == 1) {
                result.setText("Result:\nPlayer used LIZARD\nComputer used ROCK\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 2) {
                result.setText("Result:\nPlayer used LIZARD\nComputer used PAPER\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 3) {
                result.setText("Result:\nPlayer used LIZARD\nComputer used SCISSORS\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 4) {
                result.setText("Result:\nPlayer used LIZARD\nComputer used LIZARD\n\nITS A TIE!");
                playerScore.setText("" + player);
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 5) {
                result.setText("Result:\nPlayer used LIZARD\nComputer used SPOCK\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            } 
        }
        else if(plyrChoice == 5) {
            if(comChoice == 1) {
                result.setText("Result:\nPlayer used SPOCK\nComputer used ROCK\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 2) {
                result.setText("Result:\nPlayer used SPOCK\nComputer used PAPER\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 3) {
                result.setText("Result:\nPlayer used SPOCK\nComputer used SCISSORS\n\nYOU WON THIS ROUND!");
                playerScore.setText("" + (player + 1));
                computerScore.setText("" + computer); 
            }
            else if(comChoice == 4) {
                result.setText("Result:\nPlayer used SPOCK\nComputer used LIZARD\n\nYOU LOST THIS ROUND!");
                playerScore.setText("" + player);
                computerScore.setText("" + (computer + 1)); 
            }
            else if(comChoice == 5) {
                result.setText("Result:\nPlayer used SPOCK\nComputer used SPOCK\n\nITS A TIE!");
                playerScore.setText("" + player);
                computerScore.setText("" + computer); 
            }            
        }
        isGameOver();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RockPaperScissorsLizardSpock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Choice;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JTextField computerScore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton lizard;
    private javax.swing.JRadioButton paper;
    private javax.swing.JButton playBtn;
    private javax.swing.JTextField playerScore;
    private javax.swing.JTextArea result;
    private javax.swing.JRadioButton rock;
    private javax.swing.JRadioButton scissors;
    private javax.swing.JRadioButton spock;
    // End of variables declaration//GEN-END:variables
}
